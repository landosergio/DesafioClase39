paths:
  /api/carts/{cid}:
    get:
      summary: Obtiene un carrito por su Id, retornando un array con sus productos.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id de un carrito.
          schema:
            $type: String
      responses:
        "200":
          description: Retorna un array con los productos del carrito.
          content:
            application/json:
              schema:
                type: Array
                items:
                  $ref: "#components/schemas/Product"
        "400":
          description: No se encontró el carrito con ese Id.
        "500":
          description: Error interno del servidor.
    put:
      summary: Actualiza el carrito en base a un array de productos.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id de un carrito.
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateCart"
      responses:
        "200":
          description: Retorna un array con los productos del carrito.
          content:
            application/json:
              schema:
                type: Array
                items:
                  $ref: "#components/schemas/Product"
        "400":
          description: No se encontró el carrito con ese Id.
        "500":
          description: Error interno del servidor.

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por Mongo.
        products:
          type: Array
          items:
            $ref: "#components/schemas/Product"
          description: Productos que contiene el carrito.
      example:
        _id: ObjectId("664c042e42fc7ab0beefe821")
        products:
          [
            {
              _id: ObjectId("664a6aff65727315cb5e3320"),
              title: Televisor Samsung,
              description: El mejor televisor para ver el Mundial 2026,
              price: 999.999,
              thumbnail: [],
              code: SSS-111,
              stock: 75,
              status: true,
              owner: samsungstore@gmail.com,
            },
          ]
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por Mongo.
        title:
          type: String
          description: Nombre del producto.
        description:
          type: String
          description: Descripción del producto.
        price:
          type: Number
          description: Precio del producto.
        thumbnail:
          type: Array
          description: Imágenes del producto.
        code:
          type: String
          description: Código del producto.
        stock:
          type: Number
          description: Cantidad del producto en stock.
        status:
          type: Boolean
          description: Es un misterio
        owner:
          type: String
          description: Referencia al dueño del producto.
      example:
        _id: ObjectId("664a6aff65727315cb5e3320")
        title: Televisor Samsung
        description: El mejor televisor para ver el Mundial 2026
        price: 999.999
        thumbnail: []
        code: SSS-111
        stock: 75
        status: true
        owner: samsungstore@gmail.com
    ProductForCart:
      type: object
      properties:
        product:
          type: ObjectId
          description: Id del producto que se desea agregar.
        quantity:
          type: Number
          description: Cantidad del producto en el carrito.
  requestBodies:
    updateCart:
      type: Array
      items:
        $ref: "#components/schemas/ProductForCart"
